Используя различные утилиты для анализа памяти виртуальной машины провести анализ работы программы из второго модуля. Программа заявок.

Данные анализа описать в текстовом файле и добавить в репозиторий. В файле нужно указать, каким инструментом проведен анализ и что по нему видно.

Попробовать добиться состояния выхода за пределы памяти и посмотреть состояние виртуальной машины.


1. jpsC:\Users\User>jps

25136 StartUI
12404 RemoteMavenServer36
20744 RemoteMavenServer36
4744 Jps
5480
22508 Launcher

Видим proccess id = 25136

2. jmap -histo 25136

Total         64909        4194304

По последней строки видим, что создано 64909  объектов 4194304, в третьей колонке отображется имя класса(пример  java.util.HashMap (java.base@14.0.1))

3. jstat -gc pid 1s 10
Получаем данные о состоянии разных участков памяти каждые 10 сек и их обобщаем.

S0C: Текущая емкость оставшегося пространства: 0 кб
S1C: Текущий объем пространства выжившего 0 кб.
S0U: Использование свободного места 0 (КБ)
------------------------------------------

 S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT    CGC    CGCT     GCT
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000
 0,0    0,0    0,0    0,0   25600,0   3072,0   236544,0     0,0      0,0    0,0    0,0    0,0        0    0,000   0      0,000   0      0,000    0,000


4. jconsole
Heap memory usage
Смотрим сколько памяти занято в heape: 16,7 мб

threads
Используется потоков 14
Максимум peak  17

classes
Загружено 2248

cpu usage
Загрузка процессора  0,1%

VM Summary
Общие информациолнные данные:

Версия jdk Virtual Machine: 
OpenJDK 64-Bit Server VM version 14.0.1+7

Operating System: 
Windows 10 10.0
Architecture: 
amd64


5. Устанвливаю размер кучи 2 мб -Xmx2m -Xms2m и получаю выход за пределы памяти при запуске приложения
Запускается сразу с ошибкой Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread "main"
